#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Further improvements to dynamic systems 
\begin_inset CommandInset label
LatexCommand label
name "sec:Improving-FD-System"

\end_inset


\end_layout

\begin_layout Subsection
Derivative approximation schemes 
\begin_inset CommandInset label
LatexCommand label
name "sub:Derivative-approximation-schemes"

\end_inset


\end_layout

\begin_layout Standard
For every numerical problem with numerical approximation of spatial derivatives
 one must make a choice of appropriate scheme for achieving this approximation.
 In this problem numerical approximation is used to compute 
\begin_inset Formula $\frac{\partial}{\partial x}$
\end_inset

 and 
\begin_inset Formula $\frac{\partial^{2}}{\partial x^{2}}$
\end_inset

, and the following numerical scheme for obtaining these were used.
\end_layout

\begin_layout Subsubsection
Central Finite Differences
\end_layout

\begin_layout Standard
Probably the most casual approach to numerical approximation of derivatives
 are finite differences.
 In this work central scheme with variable interval length 
\begin_inset Formula $\Delta x_{k}$
\end_inset

 is considered.
 It is already an odd choice as most casual sources present finite difference
 method derivation with fixed point spacing, the method used here is defined
 by:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{split}\frac{\partial w}{\partial x}|_{x_{k}}\approx & \frac{1}{2}\left(\frac{\Delta w_{k+1}}{\Delta x_{k+1}}+\frac{\Delta w_{k}}{\Delta x_{k}}\right)\\
\frac{\partial^{2}w}{\partial x^{2}}|_{x_{k}}\approx & \frac{1}{2}\left(\frac{1}{\Delta x_{k+1}}+\frac{1}{\Delta x_{k}}\right)\left(\frac{\Delta w_{k+1}}{\Delta x_{k+1}}-\frac{\Delta w_{k}}{\Delta x_{k}}\right)
\end{split}
\label{central_FD}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Or in a computationally optimized and matrix representation friendly form:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial w}{\partial x}|_{x_{k}}\approx a_{k}w_{k-1}+b_{k}w_{k}+c_{k}w_{k+1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
a_{k}=-\frac{1}{2(x_{k}-x_{k-1})}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
b_{k}=\frac{1}{2}\left(\frac{1}{x_{k}-x_{k-1}}-\frac{1}{x_{k+1}-x_{k}}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
c_{k}=\frac{1}{2(x_{k+1}-x_{k})}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial^{2}w}{\partial x^{2}}|_{x}\approx a_{k}w_{k-1}+b_{k}w_{k}+c_{k}w_{k+1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
a_{k}=\frac{1}{2}\left(\frac{1}{x_{k+1}-x_{k}}+\frac{1}{x_{k}-x_{k-1}}\right)\frac{1}{x_{k}-x_{k-1}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
b_{k}=-\frac{1}{2}\left(\frac{1}{x_{k+1}-x_{k}}+\frac{1}{x_{k}-x_{k-1}}\right)^{2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
c_{k}=\frac{1}{2}\left(\frac{1}{x_{k+1}-x_{k}}+\frac{1}{x_{k}-x_{k-1}}\right)\frac{1}{x_{k+1}-x_{k}}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
See Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:central-FD"

\end_inset

 for example code.
\end_layout

\begin_layout Subsubsection
Quadratic Polynomial interpolation
\end_layout

\begin_layout Standard
An alternative approach is to interpolate a quadratic polynomial 
\begin_inset Formula $f(x)=a(x-x_{k})^{2}+b(x-x_{k})+c$
\end_inset

.
 Given three points: 
\begin_inset Formula $x_{k-1},\ x_{k},\ x_{k+1}$
\end_inset

 this would give a system of two equations: 
\begin_inset Formula 
\begin{equation}
\begin{split}a(x_{k-1}-\tilde{x}_{k})^{2}+b(x_{k-1}-x_{k}) & =w_{k-1}-w_{k}\\
a(x_{k+1}-x_{k})^{2}+b(x_{k+1}-x_{k}) & =w_{k+1}-w_{k}
\end{split}
\end{equation}

\end_inset

And such so is solved by 
\begin_inset Formula 
\begin{equation}
\begin{split}a= & \left(\frac{\Delta w_{k+1}}{\Delta x_{k+1}}\Delta x_{k}-\Delta w_{k}\right)\big(\Delta x_{k}\left(\Delta x_{k}+\Delta x_{k+1}\right)\big)^{-1}\\
b= & \frac{\Delta w_{k+1}}{\Delta x_{k+1}}-a\Delta x_{k+1}
\end{split}
\end{equation}

\end_inset

As the last unknown is found autocratically by setting 
\begin_inset Formula $c=w_{k}$
\end_inset

.
 So then the values of 
\begin_inset Formula $f'(x_{k})$
\end_inset

 and 
\begin_inset Formula $f''(\tilde{x}_{k})$
\end_inset

 can be found, and to find approximation for derivatives use: 
\begin_inset Formula 
\begin{equation}
\begin{split}\frac{\partial w}{\partial x}|_{x_{k}}\approx & \frac{1}{\Delta x_{k+1}+\Delta x_{k}}\left(\frac{\Delta w_{k+1}\Delta x_{k}}{\Delta x_{k+1}}+\frac{\Delta w_{k}\Delta x_{k+1}}{\Delta x_{k}}\right)\\
\frac{\partial^{2}w}{\partial x^{2}}|_{x_{k}}\approx & \frac{2}{\Delta x_{k+1}+\Delta x_{k}}\left(\frac{\Delta w_{k+1}}{\Delta x_{k+1}}-\frac{\Delta w_{k}}{\Delta x_{k}}\right)
\end{split}
\label{eq:FD_quad_poly}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Or
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial w}{\partial x}|_{x_{k}}\approx a_{k}w_{k-1}+b_{k}w_{k}+c_{k}w_{k+1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
a_{k}=-\frac{1}{x_{k+1}-x_{k-1}}\left(\frac{x_{k+1}-x_{k}}{x_{k}-x_{k-1}}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
b_{k}=-\frac{1}{x_{k+1}-x_{k-1}}\left(\frac{x_{k+1}-x_{k}}{x_{k}-x_{k-1}}-\frac{x_{k}-x_{k-1}}{x_{k+1}-x_{k}}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
c_{k}=-=\frac{1}{x_{k+1}-x_{k-1}}\left(\frac{x_{k}-x_{k-1}}{x_{k+1}-x_{k}}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
And
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial^{2}w}{\partial x^{2}}|_{x_{k}}\approx a_{k}w_{k-1}+b_{k}w_{k}+c_{k}w_{k+1}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
a_{k}=\frac{2}{x_{k+1}-x_{k-1}}\left(\frac{1}{x_{k}-x_{k-1}}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
b_{k}=-\frac{2}{x_{k+1}-x_{k-1}}\left(\frac{1}{x_{k+1}-x_{k}}+\frac{1}{x_{k}-x_{k-1}}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
c_{k}=\frac{2}{x_{k+1}-x_{k-1}}\left(\frac{1}{x_{k+1}-x_{k}}\right)
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
See Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:polynomial"

\end_inset

 for example code.
\end_layout

\begin_layout Subsubsection
Cubic spline interpolation
\end_layout

\begin_layout Standard
As another alternative approach one could build a spline and differentiate
 it to abstain derivative approximation.
 One way of achieving this is to use MATLAB build in function spline(),
 to compute cubic spline, and ppval() plus fnder() to get 
\begin_inset Formula $\frac{\partial}{\partial x}$
\end_inset

 and 
\begin_inset Formula $\frac{\partial^{2}}{\partial x^{2}}$
\end_inset

 values of such a construct.
 This could potentially be a very good approximations, but has a high cost
 burden as requires a solution of separate traditional problem to obtain
 spline coefficients.
 Nevertheless it can be used as an exotic comparison point.
 Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:spline"

\end_inset

 for example code.
\end_layout

\begin_layout Subsubsection
Finite difference with asymptotic approximation
\end_layout

\begin_layout Standard
Suppose that we have already computed the first and second asymptotic term
 
\begin_inset Formula $w_{0}$
\end_inset

, and 
\begin_inset Formula $w_{1}$
\end_inset

from tip boundary (
\begin_inset CommandInset ref
LatexCommand ref
reference "BC_N"

\end_inset

).
 Now we can differentiate the two term asymptotic approximation (
\begin_inset CommandInset ref
LatexCommand ref
reference "w_asym_1n"

\end_inset

) to obtain:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{split}\frac{\partial w}{\partial x}= & \alpha_{1}w_{0}(1-x)^{\alpha_{1}-1}\\
 & +\alpha_{2}w_{1}(1-x)^{\alpha_{2}-1}+o\left((1-x)^{\alpha_{3}-1}\right)\\
\frac{\partial^{2}w}{\partial x^{2}}= & \alpha_{1}(\alpha_{1}-1)w_{0}(1-x)^{\alpha_{1}-2}\\
 & +\alpha_{2}(\alpha_{2}-1)w_{1}(1-x)^{\alpha_{2}-2}+o\left((1-x)^{\alpha_{3}-3}\right)
\end{split}
\quad x\rightarrow1
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This would be very accurate in crack tip region 
\begin_inset Formula $x\rightarrow1$
\end_inset

, but should not be used on its own for the whole interval.
 However it is possible to combine this with the standard FD scheme:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
w=w-asymptotics+asymptotics
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial w}{\partial x}=\frac{\partial}{\partial x}\left(w-asymptotics\right)+\frac{\partial}{\partial x}asymptotics
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\frac{\partial^{2}w}{\partial x^{2}}=\frac{\partial^{2}}{\partial x^{2}}\left(w-asymptotic\right)+\frac{\partial^{2}}{\partial x^{2}}asymptotics
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Where the result of subtraction 
\begin_inset Formula $\left(w-asymptotics\right)$
\end_inset

 is treated with FD scheme (
\begin_inset CommandInset ref
LatexCommand ref
reference "central_FD"

\end_inset

) to approximate 
\begin_inset Formula $\frac{\partial}{\partial x}$
\end_inset

 and 
\begin_inset Formula $\frac{\partial^{2}}{\partial x^{2}}$
\end_inset

 .
 To be more precise this method results in:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\begin{split}\frac{\partial w}{\partial x}\approx & \frac{\partial}{\partial x}\left(w-w_{0}(1-x)^{\alpha_{1}}-w_{1}(1-x)^{\alpha_{2}}\right)\\
 & +\alpha_{1}w_{0}(1-x)^{\alpha_{1}-1}+\alpha_{2}w_{1}(1-x)^{\alpha_{2}-1}\\
\begin{split}\frac{\partial^{2}w}{\partial x^{2}}\approx\end{split}
 & \frac{\partial^{2}}{\partial x^{2}}\left(w-w_{0}(1-x)x^{\alpha_{1}}-w_{1}(1-x)^{\alpha_{2}}\right)\\
 & +\alpha_{1}(\alpha_{1}-1)w_{0}(1-x)^{\alpha_{1}-2}+\alpha_{2}(\alpha_{2}-1)w_{1}(1-x)^{\alpha_{2}-2}
\end{split}
\label{eq:FD_asymptotics}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The motivation behind this procedure is that fracture width 
\begin_inset Formula $w(x)$
\end_inset

 is going to very similar to its asymptotic expansion at the tip region.
 The difference of these two should produce less error when differentiated
 with numerical methods, which can be observed on Figure
\begin_inset CommandInset ref
LatexCommand ref
reference "step differences"

\end_inset

.
 Appendix 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Asym-FD"

\end_inset

 for shows example code implementation of this idea.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement h!
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename fd_comp.eps
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename fdd_comp.eps
	scale 60

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparisons of relative errors in approximation of 
\begin_inset Formula $\frac{\partial}{\partial x}$
\end_inset

 and 
\begin_inset Formula $\frac{\partial^{2}}{\partial x^{2}}$
\end_inset

 against zero leak off benchmark (
\begin_inset CommandInset ref
LatexCommand ref
reference "self_similar_linkov"

\end_inset

) The FD method with utilized asymptotics clearly outperforms other methods,
 particularly in most susceptible to numerical error tip region.
 (
\begin_inset Formula $x_{m}^{(2)}$
\end_inset

 grid, 
\begin_inset Formula $N=100$
\end_inset

) 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "diffs_comparision"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
\begin_inset Quotes eld
\end_inset

Hybrid
\begin_inset Quotes erd
\end_inset

 
\begin_inset Formula $\frac{1}{3w^{2}}\frac{\partial U}{\partial t}$
\end_inset

 system
\end_layout

\begin_layout Standard
In hydrofracturing problems the discretization is much more difficult than
 integration
\begin_inset Foot
status open

\begin_layout Plain Layout
Or at least as generally observed for PKN model in this work.
 Nevertheless the problem includes moving boundary in a form of the crack
 tip, hence the discretization is much harder, especially if multiple fractures
 are involved.
 On the other hand many problems, such as 1D heat transfer in a uniform
 rod, pose much less challenge when choose right discretization method.
 
\end_layout

\end_inset

 .
 Indeed the three mentioned formulations differ in spatial discretization,
 while the same integrating algorithm is used.
 The 
\begin_inset Formula $U$
\end_inset

 formulation was derived because it offers linear first term of asymptotic
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "U_asymp"

\end_inset

) which can be much better approximated with finite differences method 
\begin_inset CommandInset citation
LatexCommand cite
key "Linkov_4,MWL"

\end_inset

.
 The 
\begin_inset Formula $\Omega$
\end_inset

 formulation on the other hand has the property of 
\begin_inset Formula $\frac{\partial\Omega}{\partial x}|_{x=1}$
\end_inset

 which also makes finite difference approximation much easier.
 The question here might arise if the gain in numerical accuracy is attributed
 to some improvement in integration, or do these formulations just offer
 much more accurate representation of 
\begin_inset Formula $\frac{\partial}{\partial x}$
\end_inset

 and 
\begin_inset Formula $\frac{\partial^{2}}{\partial x^{2}}$
\end_inset

, thus the variable under integration makes no noticeable difference.
\end_layout

\begin_layout Standard
This question can be relatively easily answered, since 
\begin_inset Formula $w$
\end_inset

 and 
\begin_inset Formula $U$
\end_inset

 formulations are very in fact very similar, and a 
\begin_inset Quotes eld
\end_inset

hybrid
\begin_inset Quotes erd
\end_inset

 mixture of these two systems can be easily constructed by:
\end_layout

\begin_layout Subsubsection*
\begin_inset Formula 
\begin{equation}
\frac{\partial w}{\partial t}=\frac{1}{3w^{2}}\frac{\partial U}{\partial t}\label{eq:hybrid_w_U}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
It can be alternatively written in terms of operators (
\begin_inset CommandInset ref
LatexCommand ref
reference "w_DS"

\end_inset

) (
\begin_inset CommandInset ref
LatexCommand ref
reference "U_DS"

\end_inset

) as:
\end_layout

\begin_layout Subsubsection*
\begin_inset Formula 
\begin{equation}
\mathcal{A}_{w}(w,L^{2})=\frac{1}{3w^{2}}\mathcal{A}_{U}(w^{3},L^{2})\label{eq:A_hybrid}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
The implementation of such a system is quite straightforward, the same function
 as in case of 
\begin_inset Formula $U$
\end_inset

 system is used, except inputs and outputs are multiplied.
 
\emph on
What is important is that the numerical performance and accuracy of such
 a system can not be distinguished from the original 
\begin_inset Formula $U$
\end_inset

 formulation.
 
\emph default
The results produced by this mixture are within solvers accuracy, and appear
 as could only be contributed to insignificant double precisions disturbances
 caused by a few extra multiplications.
 Thus presenting any numerical results comparison of these here would show
 nothing, but the machine epsilon effects.
 This 
\begin_inset Quotes eld
\end_inset

hybrid
\begin_inset Quotes erd
\end_inset

 mix gets the benefit of improved differentiation (
\begin_inset CommandInset ref
LatexCommand ref
reference "diffs_comparision"

\end_inset

) with respect to spatial variable 
\begin_inset Formula $x$
\end_inset

, thus has the same advantage as 
\begin_inset Formula $U$
\end_inset

 system.
 Integration is however still performed on 
\begin_inset Formula $w$
\end_inset

 variable instead of 
\begin_inset Formula $U$
\end_inset

, but this means no difference as the output of modified 
\begin_inset Formula $\mathcal{A}_{w}$
\end_inset

 has the same accuracy as 
\begin_inset Formula $\mathcal{A}_{U}$
\end_inset

, and 
\emph on
the significant amount of numerical error is introduced at the spatial discretiz
ation not integration.
 
\emph default
A similar mixed formulation could be considered where the 
\begin_inset Formula $U$
\end_inset

 is worsened by reversing (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:A_hybrid"

\end_inset

) to form:
\end_layout

\begin_layout Subsubsection*
\begin_inset Formula 
\begin{equation}
\mathcal{A}_{U}(U,L^{2})=3w^{2}\mathcal{A}_{w}(U^{\frac{1}{3}},L^{2})\label{A_hybrid_rev}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Such formulation would loose benefits of improved differentiation and consequent
ly should be as accurate as 
\begin_inset Formula $w$
\end_inset

 system.
\end_layout

\begin_layout Subsection
Better FD formulation 
\begin_inset CommandInset label
LatexCommand label
name "sub:Better-FD-formulation"

\end_inset


\end_layout

\begin_layout Standard
When constructing operator 
\begin_inset Formula $\mathcal{A}$
\end_inset

 one needs to make a choice of how to differentiate with respect to spatial
 variable 
\begin_inset Formula $x$
\end_inset

.
 As showed in derivative approximation schemes Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:Derivative-approximation-schemes"

\end_inset

 a proper choice can result in several orders of magnitude in improvement.
 When an ODE solver is used, such as ODE15s, it is relativity easy to make
 differentiation scheme changeable inside the operator 
\begin_inset Formula $\mathcal{A}$
\end_inset

, as shown in Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "sub:building_ode_solvers"

\end_inset

.
 Thous one can test performance of the same system, with using different
 differentiation formulas or schemes.
 This means that for each of the versions of differentiation scheme described
 in section Section 
\begin_inset CommandInset ref
LatexCommand ref
reference "diffs_comparision"

\end_inset

 a version of 
\begin_inset Formula $\mathcal{A}$
\end_inset

 build with respective differentiation scheme can be made.
\end_layout

\begin_layout Standard
The results of using this four approaches: (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:FD_quad_poly"

\end_inset

), (
\begin_inset CommandInset ref
LatexCommand ref
reference "central_FD"

\end_inset

) (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:FD_asymptotics"

\end_inset

) and MATLAB spline, are shown on Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "w_system_different_diffs"

\end_inset

.
 Here it can be clearly seen the numerical error inherited form spatial
 discretization, as shown on Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "diffs_comparision"

\end_inset

, affects the accuracy of the solution.
 The Finite difference with asymptotic approximation (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:FD_asymptotics"

\end_inset

) remains the most accurate choice.
 Note that the gain compared to the worst scheme in this particular case
 is 
\emph on
three orders of magnitude
\emph default
, which is a huge improvement as the best scheme does not requires a considerabl
e amount of extra computation (and the solver might actuality decide to
 use less time steps due to better relative accuracies, thus effectively
 reduce the computation time).
 
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename acc_FD.eps
	scale 40

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Central FD (
\begin_inset CommandInset ref
LatexCommand ref
reference "central_FD"

\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename acc_poly.eps
	scale 35

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Quadratic polynomial (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:FD_quad_poly"

\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout
\begin_inset Graphics
	filename acc_spline.eps
	scale 35

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Spline (MATLAB funciton)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset Graphics
	filename acc_asym.eps
	scale 40

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
FD - asymptotics (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:FD_asymptotics"

\end_inset

)
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparison of relative error opening 
\begin_inset Formula $\partial w$
\end_inset

 for 
\begin_inset Formula $w$
\end_inset

 systems using various differentiation scheme.
 Testing against zero leak off benchmark (
\begin_inset CommandInset ref
LatexCommand ref
reference "self_similar_linkov"

\end_inset

), on 
\begin_inset Formula $x_{m}^{(2)}$
\end_inset

 grid, 
\begin_inset Formula $N=100$
\end_inset

.
 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "w_system_different_diffs"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Jacobian Matrix pattern 
\begin_inset CommandInset label
LatexCommand label
name "sub:Jacobian-Matrix-patter"

\end_inset


\end_layout

\begin_layout Standard
Jacobian matrix 
\begin_inset CommandInset citation
LatexCommand cite
key "wikiJacobian"

\end_inset

 is the matrix of all first-order partial derivatives of a vector-valued
 function (such as (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ODE_system"

\end_inset

)).
 Here the Jacobian matrix 
\begin_inset Formula $J$
\end_inset

 of 
\begin_inset Formula $y'$
\end_inset

 is an 
\begin_inset Formula $n$
\end_inset

-by-
\begin_inset Formula $n$
\end_inset

 matrix, where 
\begin_inset Formula $n$
\end_inset

 is the length of 
\begin_inset Formula $y'$
\end_inset

.
 Column element 
\begin_inset Formula $i$
\end_inset

 is the partial derivative of 
\begin_inset Formula $y'$
\end_inset

 with respect to component 
\begin_inset Formula $i$
\end_inset

 of 
\begin_inset Formula $x$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
J=\left(\begin{array}{ccc}
\frac{\partial y'_{1}}{\partial x_{1}} & \ldots & \frac{\partial y'_{1}}{\partial x_{n}}\\
\vdots & \ddots & \vdots\\
\frac{\partial y'_{m}}{\partial x_{1}} & \cdots & \frac{\partial y'_{m}}{\partial x_{n}}
\end{array}\right)\label{eq:Jacobian}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This matrix is of particular interest for the problem as a number of ODE
 solvers use it internally to perform Newton iterations and obtain the next
 time step 
\begin_inset CommandInset citation
LatexCommand cite
key "MatlabODEa,intel_ode"

\end_inset

.
 This iterations are therefore repeated a number of times, at least once
 for each time step.
 As an example a simple implementation of BDF method would have a number
 of vector operations, an inversion of a product of mentioned Jacobean and
 its numerical approximation.
 In a system of 
\begin_inset Formula $N$
\end_inset

 ODEs, if implemented properly the simple vector operations should have
 no more than 
\begin_inset Formula $O(n)$
\end_inset

 time complexity.
 Inversion and numerical approximation of Jacobian on the other side are
 
\begin_inset Formula $O(n^{3})$
\end_inset

 if naive dense matrix algorithms are used.
 However the Jacobian of this problem is not dense, in fact it has a well
 defined close to tridiagonal pattern:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
J_{pattern}=\left(\begin{array}{cccccccccc}
1 & 1 & 1 &  &  &  &  & 1 & 1 & 1\\
1 & 1 & 1 &  &  &  &  & 1 & 1 & 1\\
 & 1 & 1 & 1 &  &  &  & 1 & 1 & 1\\
 &  & \ddots & \ddots & \ddots &  &  & \vdots & \vdots & \vdots\\
 &  &  & \ddots & \ddots & \ddots &  & \vdots & \vdots & \vdots\\
 &  &  &  & \ddots & \ddots & \ddots & \vdots & \vdots & \vdots\\
 &  &  &  &  & 1 & 1 & 1 & 1 & 1\\
 &  &  &  &  &  & 1 & 1 & 1 & 1\\
 &  &  &  &  &  &  & 1 & 1 & 1\\
 &  &  &  &  &  &  & 1 & 1 & 1
\end{array}\right)\label{eq:Jacobian_pattern}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
This pattern can be obtained by analyzing operators 
\begin_inset Formula $\mathcal{A}$
\end_inset

 and 
\begin_inset Formula $\mathcal{B}$
\end_inset

 .
 First the usage of approximated spatial derivatives, (
\begin_inset CommandInset ref
LatexCommand ref
reference "central_FD"

\end_inset

) or (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:FD_asymptotics"

\end_inset

), means that there is dependence of each term 
\begin_inset Formula $y'_{i}$
\end_inset

 on terms 
\begin_inset Formula $y'_{i-1}$
\end_inset

,
\begin_inset Formula $y'_{i}$
\end_inset

, and 
\begin_inset Formula $y'_{i+1}$
\end_inset

.
 This forms the tridiagonal middle pattern.
 Operator 
\begin_inset Formula $\mathcal{A}$
\end_inset

 dependents on 
\begin_inset Formula $L^{2}$
\end_inset

, which here is the last element in 
\begin_inset Formula $y'$
\end_inset

, thus each 
\begin_inset Formula $y'_{i}$
\end_inset

 is additionally depended on 
\begin_inset Formula $y'_{n}$
\end_inset

.
 Furthermore each element of 
\begin_inset Formula $\mathcal{A}$
\end_inset

 is multiplied by the first term of asymptotic which is found using (
\begin_inset CommandInset ref
LatexCommand ref
reference "BC_N"

\end_inset

), and depends on two last points 
\begin_inset Formula $y'_{n-1}$
\end_inset

and 
\begin_inset Formula $y'_{n-2}$
\end_inset

, thus the crack tip BC 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sub:BC-x=1"

\end_inset

 and normalization over 
\begin_inset Formula $L$
\end_inset

 (
\begin_inset CommandInset ref
LatexCommand ref
reference "dimensionless"

\end_inset

) adds three right columns to the overall pattern.
 Operator 
\begin_inset Formula $B$
\end_inset

 also utilizes first asymptotic term produced by tip BC 
\begin_inset CommandInset ref
LatexCommand eqref
reference "sub:BC-x=1"

\end_inset

 so these three right columns include the last row.
 Finally the BC (
\begin_inset CommandInset ref
LatexCommand ref
reference "norm_boundary"

\end_inset

) at crack inlet is implemented using three points, hence additionally 
\begin_inset Formula $J_{patern\ (1,3)}=1$
\end_inset

.
 
\end_layout

\begin_layout Standard
The tridiagonal structure with three right side columns (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Jacobian_pattern"

\end_inset

) prevails for all variable formulations 
\begin_inset Formula $w$
\end_inset

, 
\begin_inset Formula $U$
\end_inset

 and 
\begin_inset Formula $\Omega$
\end_inset

.
 It is common for all three previously considered spatial discretization
 (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:FD_quad_poly"

\end_inset

), (
\begin_inset CommandInset ref
LatexCommand ref
reference "central_FD"

\end_inset

) and (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:FD_asymptotics"

\end_inset

) (all are dependent on tip asymptotes by tip condition, only (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:FD_asymptotics"

\end_inset

) uses them fully).
 In fact it is yet another argument for superiority of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:FD_asymptotics"

\end_inset

), as it means that the big 
\begin_inset Formula $O(h)$
\end_inset

 cost is not increased.
 Unfortunately spline formulation would yield a full Jacobian matrix, as
 a consequence of spline interpolation algorithm, thus no further benefit
 of patterning Jacobian would follow.
\end_layout

\begin_layout Standard
This binary Jacobian pattern (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Jacobian_pattern"

\end_inset

), when supplied to ODE15s solver 
\begin_inset CommandInset citation
LatexCommand cite
key "ode15sMathworks"

\end_inset

 alone, 
\emph on
allows to save at least a half, if not a vast majority, of the computation
 time
\emph default
 needed for most of the problems tackled by this work.
 If this pattern is not provided a solver must assume dense structure and
 compute an approximation for each matrix entry, thus consider 
\begin_inset Formula $n^{2}$
\end_inset

 elements.
 If the pattern is used roughly 
\begin_inset Formula $6n$
\end_inset

 elements, three diagonals and three columns are in question.
 Therefore from the algorithmic point of view one could reduce 
\begin_inset Formula $O(n^{3})$
\end_inset

 complexity to 
\begin_inset Formula $O(n)$
\end_inset

 when evaluating Jacobian matrix with pattern (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:Jacobian_pattern"

\end_inset

).
 For ODE15s solver this theoretical speedup can be tested by timing computation
 for different system sizes 
\begin_inset Formula $N$
\end_inset

, with both provided 
\begin_inset Formula $J_{pattern}$
\end_inset

 and default dense option.
 Results of this test are presented in Table 
\begin_inset CommandInset ref
LatexCommand ref
reference "sample_jacobian_speedup"

\end_inset

 , where benefits of using this pattern are made obvious.
 Thus if an ODE solver is to be used efficiently for fracturing problem,
 the Jacobian 
\emph on
must
\emph default
 be provided.
\end_layout

\begin_layout Standard
Further improvements could be obtained if problem sparseness is to used
 at the inversion stage of integrating algorithm .
 Here the pattern 
\begin_inset Formula $J_{pattern}$
\end_inset

 could be used to develop a custom made matrix inversion, that first by
 Gaussian elimination would reduces the matrix to pure tridiagonal form,
 and then perform standard Tridiagonal matrix sweep.
 Such algorithm would have 
\begin_inset Formula $O(n)$
\end_inset

 time complexity, which is far better than any generic dense system solving
 algorithm could ever achieve, (which generally are 
\begin_inset Formula $O(n^{3})$
\end_inset

).
 This will not be unfortunately developed in this work because of both deadline
 constrains and the fact that future considered problems will disturb this
 neat 
\begin_inset Formula $J_{pattern}$
\end_inset

, and consequently would make this algorithm improvement obsolete.
\end_layout

\begin_layout Standard
\begin_inset Float table
wide true
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset

 
\begin_inset Tabular
<lyxtabular version="3" rows="11" columns="3">
<features rotate="0" tabularvalignment="middle">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<column alignment="center" valignment="top">
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Formula $N$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
default dense 
\begin_inset Formula $J$
\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
optional sparse 
\begin_inset Formula $J$
\end_inset

 
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout
10
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.09s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.05s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout
20
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.10s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.05s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout
50
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.11s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.05s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout
100
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.15s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.05s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout
200
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.26s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.06s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout
500
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.81s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.08s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout
1000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.38s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.14s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell multicolumn="1" alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none" special="c">
\begin_inset Text

\begin_layout Plain Layout
2000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
8.41s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.26s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
5000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
37.90s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
0.79s
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" topline="true" bottomline="true" leftline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
10000
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
211.50s
\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" topline="true" bottomline="true" rightline="true" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
2.43s
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\begin_inset Caption Standard

\begin_layout Plain Layout
Example times needed to compute solution for a propagating fracture with
 ODE15s, with and without using optional 
\begin_inset Formula $J_{pattern}$
\end_inset

.
 The speed up obtained with pattern varies from a factor of two small systems,
 to a hundred and over for very large 
\begin_inset Formula $N$
\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "sample_jacobian_speedup"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
clearpage
\end_layout

\end_inset


\end_layout

\end_body
\end_document
