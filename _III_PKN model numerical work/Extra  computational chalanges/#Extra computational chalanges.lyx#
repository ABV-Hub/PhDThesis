#LyX 2.1 created this file. For more info see http://www.lyx.org/
\lyxformat 474
\begin_document
\begin_header
\textclass article
\use_default_options true
\begin_modules
algorithm2e
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_math auto
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section
Extra computational challenges
\end_layout

\begin_layout Subsection
Leak off computation strategies
\end_layout

\begin_layout Standard
To compute 
\begin_inset Formula $\tau(x)$
\end_inset

 it is necessary to find the inverse length function over the entire interval
 
\begin_inset Formula $x\in(0,1)$
\end_inset

.
 The initial condition gives a non-zero positive value 
\begin_inset Formula $l_{*}$
\end_inset

 
\begin_inset CommandInset ref
LatexCommand eqref
reference "initial"

\end_inset

, however the information about the history of the process, including inverse
 length function, is not given in the original formulation.
 It could be understood that the crack was previously opened and filled
 with fluid for unknown time period, or have just been opened and well defined
 
\begin_inset Formula $l^{-1}(x)$
\end_inset

 is available.
 The physical justification for Carter law is that a cake filter layer is
 being formed on exposed crack surfaces.
 Hence one could expect an impermeable layer to already exist on the initial
 opening, or try to use some reference values for early 
\begin_inset Formula $\tau(x)$
\end_inset

 from some known solution.
 This two approaches will be considered:
\end_layout

\begin_layout Itemize
If the initial fracture was opened for a long time, the initial opening
 is fully saturated: 
\begin_inset Formula 
\begin{equation}
\tau_{a}(x)=\begin{cases}
-\infty & \text{if }0\leq l(t)x\leq l_{*},\\
\tau_{num}(x) & \text{if }l_{*}<l(t)x\leq l(t);
\end{cases}\label{preconditioning_1}
\end{equation}

\end_inset


\end_layout

\begin_layout Itemize
If the initial fracture developed similarly to the zero leak-off self-similar
 solution 
\begin_inset CommandInset citation
LatexCommand cite
key "MWL"

\end_inset

 (for small time it is reasonable that 
\begin_inset Formula $\int_{0}^{1}q_{l}(x)dx\rightarrow0$
\end_inset

): 
\begin_inset Formula 
\begin{equation}
\tau_{b}(x)=\begin{cases}
\left(x\xi_{*}x_{n}\right)^{5/4}-t_{0}; & \text{if }0\leq l(t)x\leq l_{*},\\
\tau_{num}(x) & \text{if }l_{*}<l(t)x\leq l(t);
\end{cases}\label{preconditioning_2}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
(
\emph on
ewentualnie scenariusz nr 3 pusta szcelina z wybuchu 
\emph default
)
\end_layout

\begin_layout Standard
where 
\begin_inset Formula $\tau_{num}(x)$
\end_inset

 refers to output of numerical exposure time calculation scheme 
\begin_inset CommandInset ref
LatexCommand eqref
reference "tau_algorithm"

\end_inset

.
 The effects on 
\begin_inset Formula $q_{l}$
\end_inset

value of both of these approaches are presented in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "leak_tau_a_b"

\end_inset

.
 The comparison of these two cannot be however completed without understanding
 the effect of such on fracture solution.
 On Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "different_leak_off_efects"

\end_inset

 it is shown how a fracture with sufficiently large leak off can recede
 at initial times instead propagating as expected.
 Further more 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
second strategy can be extended to two variants
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\tau_{(a,b)}^{(1)}$
\end_inset

- only recent fracture history is taken into account, reopened segments
 are treated as if no cake layer existed
\end_layout

\begin_layout Standard

\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
\begin_inset Formula $\tau_{(a,b)}^{(2)}$
\end_inset

- fracture history is traced form the beginning, reopened segments are taken
 into account, thous 
\begin_inset Formula $\tau_{(a,b)}^{(2)}(x)$
\end_inset

 might return multiple opening times.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
centering
\end_layout

\end_inset


\begin_inset Graphics
	filename leak_pre_vs_pre.eps
	scale 40

\end_inset


\begin_inset CommandInset label
LatexCommand label
name "leak_tau_a_b"

\end_inset

 
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparison of leak off variations 
\begin_inset Formula $\tau_{a}$
\end_inset

 and 
\begin_inset Formula $\tau_{b}$
\end_inset

on a fracure with 
\begin_inset Formula $l_{*}\approx0.6$
\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement ht
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename different_leak_off_efects.eps
	scale 30

\end_inset

 
\begin_inset Graphics
	filename tau_graph.eps
	scale 30

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Comparison of effects various interpretations of initial fracture history
 and 
\begin_inset Formula $\tau(x)$
\end_inset

 calculation.
 This particular result was obtained while testing initial conditions [ref].
 (negligible difference in
\begin_inset Formula $\tau_{a}^{(1,2)}$
\end_inset

) 
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "different_leak_off_efects"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Exposure time computation 
\begin_inset CommandInset label
LatexCommand label
name "sub:Exposure-time-computation"

\end_inset


\end_layout

\begin_layout Standard
For the both variants of Carter leak-off 
\begin_inset CommandInset ref
LatexCommand ref
reference "carter"

\end_inset

 it is necessary to perform additional computation of exposure time 
\begin_inset Formula $t-\tau(x)$
\end_inset

 for each grid point 
\begin_inset Formula $x_{i}$
\end_inset

.
 This is however be a separate challenge on its own, especially if it is
 to be performed within the derivative function supplied to an arbitrary
 ODE solver (as it is in our approach).
 Furthermore if a point on was fracture previously opened and closed several
 times the exposure time is rather:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\tau_{num}(x)=\tau_{1}(x)+\tau_{2}(x)-\tau_{3}(x)+....+\tau_{2N_{\tau}}(x)-\tau_{2N_{\tau}+1}(x)\label{actual_tau}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Where odd terms are opening times and even times are closure times, and
 
\begin_inset Formula $N_{\tau}$
\end_inset

 is the number of times a fracture was opened.
 
\end_layout

\begin_layout Standard
As the solution is integrated the function [ref] is called, and values of
 
\begin_inset Formula $L(t_{i})$
\end_inset

, 
\begin_inset Formula $t_{i}$
\end_inset

, and 
\begin_inset Formula $V_{0}(t_{i})$
\end_inset

 are as calculated at each call are stored in an sorted, by 
\begin_inset Formula $t_{i}$
\end_inset

, dynamic array.
 Values are filtered before insertion so that each value of 
\begin_inset Formula $L_{i}$
\end_inset

 and 
\begin_inset Formula $t_{i}$
\end_inset

 is greater than the previous one, with the exception of closing fracture
 events 
\begin_inset CommandInset ref
LatexCommand eqref
reference "frac_closet"

\end_inset

.
 Then when 
\begin_inset Formula $t-\tau(x)$
\end_inset

 is to be found, the formed array is iterated over to form the trajectory
 of the crack tip (black line in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "different_leak_off_efects"

\end_inset

.
 As this iteration is made, for each grid point on 
\begin_inset Formula $x$
\end_inset

-axis the number of times the crack tip passed through that point is accounted
 for , as shown by intersections of vertical lines with black line in Figure
 
\begin_inset CommandInset ref
LatexCommand ref
reference "different_leak_off_efects"

\end_inset

.
 Cubic polynomial is interpolated on two points 
\begin_inset Formula $(L(t_{i})$
\end_inset

, 
\begin_inset Formula $t_{i})$
\end_inset

 , 
\begin_inset Formula $(L(t_{i+1})$
\end_inset

, 
\begin_inset Formula $t_{i+1})$
\end_inset

, such so 
\begin_inset Formula $L(t_{i})<xL(t_{i})<L(t_{i+1})$
\end_inset

 or 
\begin_inset Formula $L(t_{i+1})<xL(t_{i})<L(t_{i})$
\end_inset

 for closing segments, with derivative conditions from 
\begin_inset Formula $V_{0}(t_{i})$
\end_inset

 and
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none
 
\begin_inset Formula $V_{0}(t_{i+1})$
\end_inset


\family default
\series default
\shape default
\size default
\emph default
\bar default
\strikeout default
\uuline default
\uwave default
\noun default
\color inherit
 to approximate this intersections.
 Finally these times are combined to obtain total exposure time for each
 grid point.
 By taking into account all 
\begin_inset Formula $N_{\tau}$
\end_inset

times 
\begin_inset Formula $\tau^{(2)}$
\end_inset

 is calculated, if only the most recent opening time 
\begin_inset Formula $\tau_{2N_{\tau}+1}$
\end_inset

 is used 
\begin_inset Formula $\tau^{(1)}$
\end_inset

 is obtained.
\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
IncMargin
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

1em
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float algorithm
wide false
sideways false
status open

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Left
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

left
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

This
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

this
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwData
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Up
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

up
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwFunction
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Union
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Union
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwFunction
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

FindCompress
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

FindCompress
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

input
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
SetKwInOut
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

Output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

output
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Input
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

vectors with 
\begin_inset Formula $L(t_{i})$
\end_inset

, 
\begin_inset Formula $t_{i}$
\end_inset

 and 
\begin_inset Formula $V_{0}(t_{i})$
\end_inset

, arranged by their appearance time 
\begin_inset Formula $t_{i}$
\end_inset

, N grid points 
\begin_inset Formula $x_{k}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Output
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\tau_{num}(x_{k})$
\end_inset

 as a vector of size N
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
BlankLine
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Formula $\tau_{n}(x_{k})-\longleftarrow$
\end_inset

 array length 
\begin_inset Formula $N$
\end_inset

 of empty dynamic arrays length 
\begin_inset Formula $n$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $k\longleftarrow1$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
For
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $i\leftarrow1$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
KwTo
\end_layout

\end_inset

 length of 
\begin_inset Formula $t_{i}-1$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $L(t_{i+1})\geq L(t_{i})$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Repeat
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $x_{k}>L(t_{i})$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\tau_{n+1}(x_{k})\longleftarrow$
\end_inset

 output of interpolating 
\begin_inset Formula $L(t),V_{0}(t)$
\end_inset

 at 
\begin_inset Formula $t_{i},t_{i+1}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $k\longleftarrow k+1$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
If
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $L(t_{i+1})<L(t_{i})$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
Repeat
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $x_{k}<L(t_{i})$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\tau_{n+1}(x_{k})\longleftarrow$
\end_inset

 output of interpolating 
\begin_inset Formula $L(t),V_{0}(t)$
\end_inset

 at 
\begin_inset Formula $t_{i},t_{i+1}$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset Formula $k:=k-1$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
For
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $i\leftarrow1$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
KwTo
\end_layout

\end_inset

 
\begin_inset Formula $N$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\tau_{num}(x_{k})\longleftarrow\tau_{1}(x_{k})$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
For
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $j\leftarrow2$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
KwTo
\end_layout

\end_inset

 length of 
\begin_inset Formula $\tau_{n}(x_{k})$
\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uIf
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

j even
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

 
\begin_inset Formula $\tau_{num}(x_{k})\longleftarrow\tau_{num}(x_{k})+\tau_{j}(x_{k})$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset

 
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
uElse
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset


\begin_inset Formula $\tau_{num}(x_{k})\longleftarrow\tau_{num}(x_{k})-\tau_{j}(x_{k})$
\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
;
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "tau_algorithm"

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Scheme for numerically aproximating 
\begin_inset Formula $\tau(x)$
\end_inset

 in a propagating or closing fracture
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status collapsed

\begin_layout Plain Layout


\backslash
DecMargin
\end_layout

\end_inset


\begin_inset ERT
status collapsed

\begin_layout Plain Layout

{
\end_layout

\end_inset

1em
\begin_inset ERT
status collapsed

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Modified closing fracture algorithm
\end_layout

\begin_layout Standard
The problem formultion  The underlying assumptions were that the crack propagati
on speed is positive (
\begin_inset Formula $V(1)>0$
\end_inset

) and the crack width is greater than zero (
\begin_inset Formula $w(t,x)>0$
\end_inset

), except for the crack tip where 
\begin_inset Formula $w(t,1)=0$
\end_inset

.
 These could however become invalid under specific conditions.
 Fracture remains open as long as fluid flow inside the fracture is greater
 than the leak-off, then proposed a simple observation that: 
\shape italic
if the fracture width is monotonically decreasing from mouth to tip, and
 the value of leak-off monotonically increases up to the crack tip, then
 the first possible non-tip point 
\begin_inset Formula $x$
\end_inset

 where 
\begin_inset Formula $w(t,x)=0$
\end_inset

 is 
\begin_inset Formula $1-\varepsilon$
\end_inset

 for an infinitely small 
\begin_inset Formula $\varepsilon$
\end_inset


\shape default
.
\end_layout

\begin_layout Standard
Noting that MATLAB ODE15s solver provides an option to include events, lets
 supply a simple event function:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
f_{event}(t)=w_{N}.\label{frac_closet}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
Then when the value of the crack width at the last grid point reaches 
\begin_inset Formula $w_{N}=0$
\end_inset

, ODE15s is going to stop computation.
 Now it is possible to restart the computation after a small modification
 of the solution at the time the event occurred:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
l_{*}=(1-\varepsilon)l_{end},\quad\quad w_{*}(x)=w_{end}(x(1-\varepsilon)),\label{event_re-mesh}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
where 
\begin_inset Formula $l_{end}$
\end_inset

 and 
\begin_inset Formula $w_{end}$
\end_inset

 refer to the values at the last time step.
 The discretized value 
\begin_inset Formula $w_{end}$
\end_inset

 needs to be extrapolated, this is done using spline interpolation and asymptoti
c terms 
\begin_inset Formula $w_{0}$
\end_inset

 and 
\begin_inset Formula $w_{1}$
\end_inset

 for "good enough" accuracy 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Interpolating-and-Integrating"

\end_inset

.
 The fluid balance is satisfied (see subsection 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:fluid_balance"

\end_inset

).
 This operation essentially chops off closed fracture segment off the length
 
\begin_inset Formula $\varepsilon l$
\end_inset

, thus it is a discontinuous step, however the change is relatively small
 and insignificant.
 Final solution is obtained by combining all the outputs together.
 If fracture is to decrease significantly, this operation needs to be repeated
 multiple times, which might lead to high computational cost, as each backward
 step is of order 
\begin_inset Formula $\varepsilon$
\end_inset

.
 For this reason to compute possibly closing fractures it would be unwise
 to use 
\begin_inset Formula $\varepsilon<10^{-2}$
\end_inset

 for closing fracture, but it is possible to use small 
\begin_inset Formula $\varepsilon$
\end_inset

 when fracture is propagating, and switch to a larger value if a change
 of propagation regime is detected.
 Note that this approach should not be treated as a proper solution to closing
 fracture problem, it is a straightforward simplified extension to our propagati
ng fracture model.
 Behavior of closing fracture is presented in Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "closing_zoom"

\end_inset

.
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement ht
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename closing-zoom.eps
	scale 38

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Close view on closing fracture length.
 Fracture is allowed to close by 
\begin_inset Formula $\varepsilon$
\end_inset

 of its length, thus staircase pattern is formed.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "closing_zoom"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement ht
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename binary_pumping.eps
	scale 38

\end_inset

 
\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
Testing 
\begin_inset Formula $\tau_{b}^{(1,2)}$
\end_inset

 variations with periodic pumping function (alternating 
\begin_inset Formula $q_{0}=0\ or\ 1$
\end_inset

).
 Cycles appear, as expected from study of other works (ex 
\begin_inset CommandInset citation
LatexCommand cite
key "Economides_leak_offs"

\end_inset

), although the nature of this experiment is quite different.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "test_with altarnating q0"

\end_inset

 
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Fluid balance check
\end_layout

\begin_layout Standard
\begin_inset CommandInset label
LatexCommand label
name "subsec:fluid_balance"

\end_inset


\end_layout

\begin_layout Standard
Fluid balance equation is used to verify if solver output is valid:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\int_{0}^{t}q_{0}(t)dt=\int_{0}^{1}w_{*}(x)dx+\int_{0}^{t}\int_{0}^{1}w(t,x)dxdt+\int_{0}^{t}\int_{0}^{1}q_{l}(t,x)dxdt.\label{fluid_balance}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
A good way to integrate leak off function
\begin_inset Formula $\int_{0}^{t}\int_{0}^{1}q_{l}(t,x)dxdt$
\end_inset

 is to add an extra ode to ODE15s, lets call it:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
\mathcal{\mathcal{C}=}\int_{0}^{1}q_{l}(t,x)dx\label{operator_leak}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
So then the derivative function 
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:ODE_system"

\end_inset

 can be extended by attaching 
\family roman
\series medium
\shape up
\size normal
\emph off
\bar no
\strikeout off
\uuline off
\uwave off
\noun off
\color none

\begin_inset Formula $\mathcal{C}$
\end_inset

:
\end_layout

\begin_layout Standard
\begin_inset Formula 
\begin{equation}
y'=\{\mathcal{A},\mathcal{B},\mathcal{\mathcal{C}}\}\label{fluid_balance-2}
\end{equation}

\end_inset


\end_layout

\end_body
\end_document
